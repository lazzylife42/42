{
    "Generate HPP File": {
        "prefix": "generateHPP",
        "body": [
            "#ifndef ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
            "# define ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
            "#define RST \"\\033[0m\"",
            "#define RED \"\\033[1;31m\"",
            "#define GRN \"\\033[1;32m\"",
            "#define YEL \"\\033[1;33m\"",
            "#define BLU \"\\033[1;34m\"",
            "#define MAG \"\\033[1;35m\"",
            "#define CYA \"\\033[1;36m\"",
            "#define WHT \"\\033[1;37m\"",
            "",
            "",
            "class ${TM_FILENAME_BASE}",
            "{",
            "public:",
            "\t// Public members",
            "\t${TM_FILENAME_BASE}();",
            "\t~${TM_FILENAME_BASE}();",
            "",
            "private:",
            "\t// Private members",
            "};",
            "",
            "#endif"
        ],
        "description": "Generate HPP file with public and private sections"
    },
    "Generate CPP File": {
        "prefix": "generateCPP",
        "body": [
            "#include <iostream>",
            "#include \"${TM_FILENAME_BASE}.hpp\"",
            "",
            "${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}::${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}(void) :",
            "{",
            "\tstd::cout << GRN << \"Constructor called\" << RST << std::endl;",
            "\treturn;",
            "}",
            "",
            "${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}::~${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}(void)",
            "{",
            "\tstd::cout << RED << \"Destructor called\" << RST << std::endl;",
            "\treturn;",
            "}"
        ],
        "description": "Generate CPP file for Sample class"
    }
}
